group 'gov.dvsa.vol'
version '1.0-SNAPSHOT'

apply plugin: 'idea'
apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'io.gatling.highcharts:gatling-charts-highcharts:3.0.1.1'
    testCompile 'io.gatling:gatling-core:3.0.1.1'
    testCompile 'io.gatling:gatling-http:3.0.1.1'
    testCompile 'org.scala-lang:scala-library:2.12.7'
    testCompile 'org.apache.commons:commons-csv:1.5'
    testCompile 'org.dvsa.testing.lib:active-support:1.2.8'
    testCompile 'org.dvsa.testing.lib:uri-constructor:1.4.5'
}


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.amazonaws:aws-java-sdk-core:1.11.5'
    }
}

import com.amazonaws.auth.*

repositories {
    maven {
        url "s3://devappci-shd-pri-qarepo"
        credentials(AwsCredentials) {
            def awsCredentials = new DefaultAWSCredentialsProviderChain().getCredentials()
            accessKey awsCredentials.getAWSAccessKeyId()
            secretKey awsCredentials.getAWSSecretKey()
        }
    }
}

task registerUser(type: JavaExec) {
    systemProperty "env", java.lang.System.getProperty("env")
    systemProperty "users", java.lang.System.getProperty("users")
    systemProperty "rampUp", java.lang.System.getProperty("rampUp")
    systemProperty "duration", java.lang.System.getProperty("duration")

    description = "Load testing with Gatling"
    classpath = sourceSets.test.runtimeClasspath
    main = "io.gatling.app.Gatling"
    //Specify the simulation to run
    args = [
            "--simulation", "simulations.RegisterUserSimulation",
            "--results-folder", "${buildDir}/gatling-results",
            "--bodies-folder", sourceSets.test.resources
    ]
}

task createApplication(type: JavaExec) {
    systemProperty "env", java.lang.System.getProperty("env")
    systemProperty "users", java.lang.System.getProperty("users")
    systemProperty "rampUp", java.lang.System.getProperty("rampUp")
    systemProperty "duration", java.lang.System.getProperty("duration")
    systemProperty "dbUsername", java.lang.System.getProperty("dbUsername")
    systemProperty "dbPassword", java.lang.System.getProperty("dbPassword")

    description = "Load testing with Gatling"
    classpath = sourceSets.test.runtimeClasspath
    main = "io.gatling.app.Gatling"
    //Specify the simulation to run
    args = [
            "--simulation", "simulations.CreateApplicationSimulation",
            "--results-folder", "${buildDir}/gatling-results",
            "--bodies-folder", sourceSets.test.resources
    ]
}

test {
    systemProperty "env", java.lang.System.getProperty("env")
    systemProperty "users", java.lang.System.getProperty("users")
    systemProperty "rampUp", java.lang.System.getProperty("rampUp")
    systemProperty "duration", java.lang.System.getProperty("duration")
    systemProperty "dbUsername", java.lang.System.getProperty("dbUsername")
    systemProperty "dbPassword", java.lang.System.getProperty("dbPassword")

    doFirst {
        filter {
            includeTest "*SelfServeRegisterUser", "mainTest"
        }
    }
    doLast {
        createApplication.exec()

    }
    doLast {
//        cleanUp.executeTests()
    }
}

task cleanUp(type: Test) {
    filter {
        println("*********deleting loginId file************")
        sleep 2000
        includeTest "*SelfServeRegisterUser", "deleteFile"
        println("***********finishing deleting file**********")
        sleep 2000
        println("********cancel all created applications******")
        includeTest "*SelfServeRegisterUser", "cancelApplication"
    }
}